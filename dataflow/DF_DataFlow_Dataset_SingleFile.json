{
	"name": "DF_DataFlow_Dataset_SingleFile",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_DF_Input",
						"type": "DatasetReference"
					},
					"name": "F1SeasonDrivers"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_DF_ADLS_Output",
						"type": "DatasetReference"
					},
					"name": "Sink"
				}
			],
			"transformations": [
				{
					"name": "SelectSpecificColumns"
				},
				{
					"name": "SortingByPoints"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Driver as string,",
				"          Abbreviation as string,",
				"          No as string,",
				"          Team as string,",
				"          Country as string,",
				"          Podiums as string,",
				"          Points as string,",
				"          {Grands Prix Entered} as string,",
				"          {World Championships} as string,",
				"          {Highest Race Finish} as string,",
				"          {Highest Grid Position} as string,",
				"          {Date of Birth} as string,",
				"          {Place of Birth} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> F1SeasonDrivers",
				"F1SeasonDrivers select(mapColumn(",
				"          Driver,",
				"          Team,",
				"          Points,",
				"          {World Championships},",
				"          {Highest Race Finish}",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectSpecificColumns",
				"SelectSpecificColumns sort(desc(Points, true),",
				"     partitionBy('hash', 1)) ~> SortingByPoints",
				"SortingByPoints sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Final_F1_Sorted_Drivers'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Sink"
			]
		}
	}
}